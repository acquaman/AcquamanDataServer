#ifndef AMDSCLIENTREQUESTDEFINITIONS_H
#define AMDSCLIENTREQUESTDEFINITIONS_H

#include <QString>

namespace AMDSClientRequestDefinitions {
	#define AMDS_CLIENTREQUEST_SUCCESS 20700
	#define AMDS_CLIENTREQUEST_INVALID_MESSAGE_TYPE 20701
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_MESSAGE_TYPE 20702  // 207xx error codes for client request
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_SOCKET_KEY 20703
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_STATUS 20704
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_ERROR_MESSAGE 20705
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_RESPONSE_TYPE 20706
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_NAME 20707

	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_PACKET_STATS_COUNT 20710 // AMDSClientStatisticsRequest
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_PACKET_STATS 20711

	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_GROUP_INFO_COUNT 20720 // AMDSClientIntrospectionRequest
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_GROUP_INFO 20721

	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_INCLUDE_STATUS 20730 // AMDSClientDataRequest
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_INCLUDE_DATA 20731
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_UNIFORM_DATA_TYPE 20732
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_COUNT 20733
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DECODE_DATA_TYPE 20734
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DECODE_DATA_TYPE_IN_DATA_HOLDER 20735
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_HOLDER_TYPE 20736
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_INSTANTIATE_DATA_HOLDER 20737
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_HOLDER_DATA 20738
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_FLATTEN_RESULT_DATA 20739

	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_START_TIME 20740
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_END_TIME 20741
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_MIDDLE_TIME 20742
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_COUNT 20743
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_RELATIVE_COUNT 20744
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_COUNT_BEFORE 20745
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_COUNT_AFTER 20746
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_UPDATE_INTERVAL 20747
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_HANDSHAKE_SOCKET_KEY 20748
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_NAMES 20749

	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_CONFIGURATION_COMMAND_SIZE 20750
	#define AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_CONFIGURATION_COMMAND 20751

	#define AMDS_CLIENTREQUEST_INFO_HANDLE_CLIENT_REQUEST 20790
	#define AMDS_CLIENTREQUEST_INFO_REQUEST_DATA 20791
	#define AMDS_CLIENTREQUEST_INFO_CONTINUOUS_MSG_EXPIRED 20792
	#define AMDS_CLIENTREQUEST_INFO_CONTINUOUS_MSG_HAND_SHAKE 20793
	#define AMDS_CLIENTREQUEST_INFO_CONTINUOUS_MSG_HAND_SHAKE_DEREGISTER 20794
	#define AMDS_CLIENTREQUEST_ERR_FAILED_TO_RETRIEVE_DATA 20795


	enum OperationType{
		Read = 0,
		Write = 1
	};
	enum RequestType{
		Introspection = 0,
		Statistics = 1,
		StartTimePlusCount = 2,
		RelativeCountPlusCount = 3,
		StartTimeToEndTime = 4,
		MiddleTimePlusCountBeforeAndAfter = 5,
		Continuous = 6,
		Configuration = 7,
		InvalidRequest = 8 // NOTE: this must be the last item of the RequestType definition
	};

	inline static QString errorMessage(int errorCode, OperationType operType, RequestType msgType) {
		if (errorCode == AMDS_CLIENTREQUEST_INVALID_MESSAGE_TYPE)
			return QString("Unregistered or invalid message type: %1").arg(msgType);

		QString fieldName;

		switch (errorCode) {
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_MESSAGE_TYPE:
			fieldName = "MessageType";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_SOCKET_KEY:
			fieldName = "SocketKey";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_STATUS:
			fieldName = "Status";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_ERROR_MESSAGE:
			fieldName = "ErrorMessage";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_RESPONSE_TYPE:
			fieldName = "ResponseType";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_NAME:
			fieldName = "BufferName";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_PACKET_STATS_COUNT:
			fieldName = "PacketStatsCount";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_PACKET_STATS:
			fieldName = "PacketStats";
			break;

		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_GROUP_INFO_COUNT:
			fieldName = "BufferGroupInfoCount";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_GROUP_INFO:
			fieldName = "BufferGroupInfo";
			break;

		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_INCLUDE_STATUS:
			fieldName = "IncludeStatus";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_INCLUDE_DATA:
			fieldName = "IncludeData";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_UNIFORM_DATA_TYPE:
			fieldName = "UniformDataType";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_COUNT:
			fieldName = "DataCount";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DECODE_DATA_TYPE:
			fieldName = "DecodeDataType";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DECODE_DATA_TYPE_IN_DATA_HOLDER:
			fieldName = "DecodeDataTypeInDataHolder";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_HOLDER_TYPE:
			fieldName = "DataHolderType";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_INSTANTIATE_DATA_HOLDER:
			fieldName = "InstantiateDataHolder";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_HOLDER_DATA:
			fieldName = "DataHolderData";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_DATA_FLATTEN_RESULT_DATA:
			fieldName = "FlattenResultData";
			break;

		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_START_TIME:
			fieldName = "StartTime";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_END_TIME:
			fieldName = "EndTime";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_MIDDLE_TIME:
			fieldName = "MiddleTime";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_COUNT:
			fieldName = "Count";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_RELATIVE_COUNT:
			fieldName = "RelativeCount";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_COUNT_BEFORE:
			fieldName = "CountBefore";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_COUNT_AFTER:
			fieldName = "CountAfter";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_UPDATE_INTERVAL:
			fieldName = "UpdateInterval";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_HANDSHAKE_SOCKET_KEY:
			fieldName = "HandShakeSocketKey";
			break;
		case AMDS_CLIENTREQUEST_FAIL_TO_HANDLE_BUFFER_NAMES:
			fieldName = "BufferNames";
			break;
		default:
			fieldName = "Unknown";
			break;
		}

		QString operation = (operType == Read ? "read" : "write");
		QString errMsg = QString("Failed to %1 `%2` for message type %3 ").arg(operation).arg(fieldName).arg(msgType);
		return errMsg;
	}
}

#endif // AMDSCLIENTREQUESTDEFINITIONS_H
